# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  Wpf Continuous Integration

# Trigger on every main branch push and pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [ AnyCPU ]

    runs-on: windows-latest

    env:
      SigningCertificate: wv2util\wv2util_TemporaryKey.pfx
      Solution_Path: wv2util\wv2util.sln
      Test_Project_Path: wv2utilTests\wv2utilTests.csproj
      Wpf_Project_Path: wv2util\wv2util.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPath and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Test
    - name: Execute Unit Tests
      run: dotnet test $env:Test_Project_Path

    # Restore the application
    - name:  Restore the Wpf application to populate the obj folder
      run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: Debug
